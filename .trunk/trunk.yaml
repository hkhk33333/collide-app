# This file controls the behavior of Trunk: https://docs.trunk.io/cli
# To learn more about the format of this file, see https://docs.trunk.io/reference/trunk-yaml
version: 0.1
cli:
  version: 1.25.0
# Trunk provides extensibility via plugins. (https://docs.trunk.io/plugins)
plugins:
  sources:
    - id: trunk
      ref: v1.7.2
      uri: https://github.com/trunk-io/plugins
# Many linters and tools depend on runtimes - configure them here. (https://docs.trunk.io/runtimes)
runtimes:
  enabled:
    - go@1.25.0
    - java@23
    - node@22.18.0
    - python@3.13.3
# This is the section where you manage your linters. (https://docs.trunk.io/check/configuration)
lint:
  files:
    - name: android-source
      extensions: [java, kt, kts, xml, aidl, rs, fs, vs, gradle, pro]
      filenames:
        - AndroidManifest.xml
        - build.gradle
        - build.gradle.kts
        - settings.gradle
        - settings.gradle.kts
        - gradle.properties
        - proguard-rules.pro
        - lint.xml
  disabled:
    # We disable checkov because it is an infrastructure-as-code scanner,
    # and this project does not contain any IaC files (e.g., Terraform, Dockerfile, Kubernetes).
    # See https://www.checkov.io/1.Welcome/What%20is%20Checkov.html#:~:text=policies.-,Supported%20IaC%20types,Docker,-Custom for more details.
    - checkov
  enabled:
    - prettier@3.6.2
    - actionlint@1.7.7
    - git-diff-check
    - gitleaks@8.28.0
    - ktlint@1.7.1
    - markdownlint@0.45.0
    - osv-scanner@2.2.2
    - shellcheck@0.11.0
    - shfmt@3.6.0
    - taplo@0.10.0
    - trufflehog-git@3.90.8 # For the git-hooks
    - trufflehog@3.90.8
    - yamllint@1.37.1
    - detekt-gradle@SYSTEM
    - android-lint
  definitions:
    - name: android-lint
      files: [android-source]
      # Files that invalidate lint cache when changed (Gradle/wrapper, lint configs & baselines)
      # Note: cache_results is currently false (see command block). These entries are
      # retained to future‑proof caching and document non‑target inputs that influence
      # Android Lint output. If caching is re‑enabled, these ensure proper invalidation.
      affects_cache:
        - build.gradle
        - build.gradle.kts
        - app/build.gradle
        - app/build.gradle.kts
        # Needed for GradleDependency/NewerVersionAvailable checks
        - gradle/libs.versions.toml
        - settings.gradle
        - settings.gradle.kts
        - gradle.properties
        - gradle/wrapper/gradle-wrapper.properties
        - lint.xml
        - app/lint.xml
        - lint-baseline.xml
        - app/lint-baseline.xml
      commands:
        - name: lint
          # Run Gradle lint and forward the newest SARIF report to Trunk
          # Note: cd into ${workspace} so ./gradlew resolves when Trunk runs from a temp CWD
          run: |
            sh -c '
              cd ${workspace} && \
              ./gradlew lint && \
              SARIF=$(ls -t app/build/reports/lint-results*.sarif 2>/dev/null | head -n1) && \
              [ -n "$SARIF" ] && \
              cp "$SARIF" ${tmpfile}
            '
          output: sarif
          read_output_from: tmp_file
          success_codes: [0]
          cache_results: false
          # Caching note (verified):
          # - Android Lint GradleDependency reads gradle/libs.versions.toml. This file is listed in
          #   affects_cache to ensure correct cache invalidation.
          # - In this repo, with cache_results enabled, Trunk's console has been inconsistent
          #   even though SARIF contains the findings.
          # Still we are not certain of the root cause of why it doesn't work when cache_results is true
          # - For predictable console visibility, we keep caching OFF. If you re-enable it, run:
          #   1) trunk cache clean
          #   2) trunk check --all --show-existing --diff=full (review AUTOFIXES)
          # Keep one process; Gradle parallelizes internally and this reduces daemon churn
          max_concurrency: 1
          run_linter_from: workspace
          target: .
      # Allow time for cold Gradle daemon / dependency resolution on CI
      run_timeout: 10m
  # We vendor the Gradle wrapper script; it's third-party generated and not maintained here.
  # Ignore it for shellcheck to prevent false positives and noisy findings on non-project code.
  ignore:
    - linters: [shellcheck, shfmt]
      paths:
        - gradlew
actions:
  enabled:
    - commitizen
    - commitlint
    - git-blame-ignore-revs
    - trufflehog-pre-commit
    - trunk-fmt-pre-commit
    - trunk-check-pre-commit
    - trunk-announce
    - trunk-check-pre-push
    - trunk-upgrade-available
    - gradle-test-pre-push
    - gradle-build-pre-push
  definitions:
    - id: commitizen
      packages_file: ${workspace}/.trunk/commitizen/package.json
    - id: gradle-test-pre-push
      display_name: Gradle Tests
      description: Run unit tests before push
      run: ./gradlew test
      triggers:
        - git_hooks: [pre-push]
    - id: gradle-build-pre-push
      display_name: Gradle Build
      description: Verify project builds before push
      run: ./gradlew build -x test
      triggers:
        - git_hooks: [pre-push]
