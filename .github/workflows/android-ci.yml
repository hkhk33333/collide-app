name: Android CI
# Pipeline summary:
# - Triggers: push (main), pull_request (all branches), manual, and nightly schedule (02:00 UTC)
# - Path gating: `detekt-paths` uses `dorny/paths-filter` to decide whether tests/lint/detekt should run
# - Unit tests: build + test with Kover coverage, artifact reports uploaded
# - Lint: Android Lint, artifact report uploaded
# - Detekt: runs on push/PR only when Kotlin/Gradle paths changed; artifact uploaded
# - Instrumentation tests: disabled on push/PR (Linux emulator instability; macOS cost). To enable, gate with
#   `needs.detekt-paths.outputs.tests_should_run == 'true' && (github.event_name == 'pull_request' || github.event_name == 'push')`
# - Nightly: change-check job prevents redundant nightly runs; optional full emulator matrix (API 29/30/33)

on:
  push:
    branches: [main]
  pull_request:
    branches: ["**"]
  schedule:
    - cron: 0 2 * * * # Nightly at 02:00 UTC
  workflow_dispatch:

concurrency:
  group: android-ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  nightly-change-check:
    name: Nightly Change Check
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    outputs:
      changed: ${{ steps.check.outputs.changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Prepare cache dir
        run: mkdir -p .github/.nightly_cache

      - name: Restore last nightly commit
        id: restore
        uses: actions/cache/restore@v4
        with:
          path: .github/.nightly_cache
          key: nightly-sha-
          restore-keys: |
            nightly-sha-

      - name: Check if commit changed
        id: check
        run: |
          CURRENT_SHA="${GITHUB_SHA}"
          LAST_FILE=".github/.nightly_cache/last_sha"
          if [ -f "$LAST_FILE" ]; then LAST_SHA=$(cat "$LAST_FILE"); else LAST_SHA=""; fi
          if [ "$CURRENT_SHA" = "$LAST_SHA" ]; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
            echo -n "$CURRENT_SHA" > "$LAST_FILE"
          fi

      - name: Save new nightly commit
        if: steps.check.outputs.changed == 'true'
        uses: actions/cache/save@v4
        with:
          path: .github/.nightly_cache
          key: nightly-sha-${{ github.sha }}
  detekt-paths:
    name: Detect Detekt-relevant changes
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    outputs:
      detekt_should_run: ${{ steps.filter.outputs.kotlin == 'true' || steps.filter.outputs.gradle == 'true' }}
      tests_should_run: ${{ steps.filter.outputs.kotlin == 'true' || steps.filter.outputs.gradle == 'true' || steps.filter.outputs.app == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Filter changed paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            kotlin:
              - '**/*.kt'
              - '**/*.kts'
            gradle:
              - 'gradle/**'
              - 'build.gradle.kts'
              - 'settings.gradle.kts'
              - 'gradle.properties'
              - 'app/build.gradle.kts'
            app:
              - 'app/**'
  build-and-unit-tests:
    name: Build and Unit Tests
    runs-on: ubuntu-latest
    needs: [detekt-paths]
    if: needs.detekt-paths.outputs.tests_should_run == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build Debug and run unit tests with coverage
        run: ./gradlew --no-daemon --stacktrace :app:assembleDebug :app:testDebugUnitTest :app:koverXmlReport :app:koverHtmlReport

      - name: Upload unit test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-reports
          path: |
            app/build/test-results/testDebugUnitTest/**
            app/build/reports/tests/testDebugUnitTest/**
            app/build/reports/kover/html/**
            app/build/reports/kover/xml/**

  lint:
    name: Android Lint
    runs-on: ubuntu-latest
    needs: [detekt-paths]
    if: needs.detekt-paths.outputs.tests_should_run == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run lint
        run: ./gradlew --no-daemon --stacktrace :app:lintDebug

      - name: Upload lint report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: app/build/reports/lint-results-debug.html

  detekt:
    name: Detekt Static Analysis
    runs-on: ubuntu-latest
    needs: [detekt-paths]
    if: (github.event_name == 'push' || github.event_name == 'pull_request') && needs.detekt-paths.outputs.detekt_should_run == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run detekt
        run: ./gradlew --no-daemon --stacktrace :app:detekt

      - name: Upload Detekt report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: detekt-report
          path: |
            app/build/reports/detekt/**

  # NOTE: Instrumentation tests are temporarily disabled. Rationale:
  # - Linux GitHub-hosted runners are currently unreliable for this project's emulator
  #   (graphics/virtualization constraints lead to emulator boot failures/timeouts).
  # - macOS runners work more reliably with the Android emulator but are costly in Actions minutes,
  #   which isn't viable for this public repo.
  # - A self-hosted runner isn't available at the moment.
  # To re-enable later, replace the `if: ${{ false }}` line below with the gate condition:
  # `if: needs.detekt-paths.outputs.tests_should_run == 'true' && (github.event_name == 'pull_request' || github.event_name == 'push')`
  instrumentation-tests:
    if: ${{ false }}
    name: Instrumentation Tests (Emulator)
    runs-on: ubuntu-latest
    timeout-minutes: 45
    needs: [detekt-paths]
    # if: needs.detekt-paths.outputs.tests_should_run == 'true' && (github.event_name == 'pull_request' || github.event_name == 'push')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Cache AVD
        uses: actions/cache@v4
        with:
          path: |
            ~/.android/avd
            ~/.android/adb
          key: avd-${{ runner.os }}-api30-google_apis-x86_64-v1
          restore-keys: |
            avd-${{ runner.os }}-

      - name: Pre-build app and androidTest APKs
        run: ./gradlew --no-daemon --stacktrace :app:assembleDebug :app:assembleAndroidTest

      - name: Run emulator and connected tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          arch: x86_64
          target: google_apis
          profile: pixel_6
          emulator-options: -no-snapshot -no-window -gpu swiftshader_indirect -no-boot-anim -camera-back none -noaudio
          disable-animations: false
          script: ./gradlew --no-daemon --stacktrace :app:connectedDebugAndroidTest

      - name: Upload androidTest reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: instrumentation-test-reports
          path: |
            app/build/outputs/androidTest-results/**
            app/build/reports/androidTests/connected/**

  instrumentation-tests-matrix:
    name: Instrumentation Tests (Emulator - Full Matrix)
    runs-on: ubuntu-latest
    needs: [nightly-change-check]
    if: github.event_name == 'schedule' && needs.nightly-change-check.outputs.changed == 'true'
    strategy:
      fail-fast: false
      matrix:
        api-level: [29, 30, 33]
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Cache AVD (API ${{ matrix.api-level }})
        uses: actions/cache@v4
        with:
          path: |
            ~/.android/avd
            ~/.android/adb
          key: avd-${{ runner.os }}-api${{ matrix.api-level }}-google_apis-x86_64-v1
          restore-keys: |
            avd-${{ runner.os }}-

      - name: Pre-build app and androidTest APKs
        run: ./gradlew --no-daemon --stacktrace :app:assembleDebug :app:assembleAndroidTest

      - name: Run emulator and connected tests (API ${{ matrix.api-level }})
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          target: google_apis
          profile: pixel_6
          emulator-options: -no-snapshot -no-window -gpu swiftshader_indirect -no-boot-anim -camera-back none -noaudio
          disable-animations: false
          script: ./gradlew --no-daemon --stacktrace :app:connectedDebugAndroidTest

      - name: Upload androidTest reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: instrumentation-test-reports
          path: |
            app/build/outputs/androidTest-results/**
            app/build/reports/androidTests/connected/**
